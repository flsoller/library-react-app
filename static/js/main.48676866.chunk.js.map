{"version":3,"sources":["redux/helpers/localStorage.js","redux/constants.js","redux/reducers.js","redux/store.js","components/app-bars/TitleBar.jsx","components/app-bars/MenuBar.jsx","redux/actions.js","components/content/CardEdit.jsx","components/content/CardItem.jsx","components/content/AddBookModal.jsx","assets/defaultBackground.svg","components/content/EmptyDefault.jsx","components/content/ContentHolder.jsx","App.js","index.js"],"names":["fromLocalStorage","localStorage","getItem","JSON","parse","err","console","error","LIBRARY_ADD_BOOK","LIBRARY_REMOVE_BOOK","LIBRARY_UPDATE_BOOK","VIEW_SELECT_ALL","VIEW_SELECT_FAV","VIEW_SELECT_READ","VIEW_SELECT_LOANED","VIEW_ADD_TO_CURRENT","VIEW_REMOVE_FROM_CURRENT","VIEW_UPDATE_CURRENT","initialState","library","view","reducer","combineReducers","state","action","type","book","payload","bookTitle","filter","title","key","editItems","isFav","isLoaned","isReading","map","currentView","newValues","bookNew","some","bookOld","index","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","serializedState","stringify","setItem","saveToLocalStorage","getState","useStyles","makeStyles","titleBarStyle","backgroundColor","TitleBar","classes","AppBar","position","className","Toolbar","Typography","variant","menuBarStyle","buttonTextStyle","color","MenuBar","dispatch","useDispatch","Button","onClick","CardEdit","setEditItems","handleSwitch","e","target","name","checked","FormGroup","row","FormControlLabel","control","Switch","onChange","size","label","labelPlacement","fontSize","pos","marginBottom","CardItem","bookAuthor","bookPages","deleteHandler","removeFromLibrary","removeFromView","useState","isEditing","setIsEditing","editHandler","updateBook","Card","CardContent","gutterBottom","component","CardActions","AddBookModal","open","setOpen","handleClose","author","pages","Math","random","setBook","handleChange","id","value","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","fullWidth","autoComplete","inputProps","inputMode","pattern","DialogActions","alert","addToLibrary","addToView","Image","styled","img","EmptyDefault","Grid","container","direction","spacing","alignItems","justify","style","minHeight","src","defaultBackground","alt","topMargin","marginTop","buttonText","ContentHolder","bookView","useSelector","renderBooks","item","xs","sm","md","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48676866.chunk.js","sourcesContent":["// Get books from localStorage or return empty array if false\nexport const fromLocalStorage = () => {\n  try {\n    return localStorage.getItem('books')\n      ? JSON.parse(localStorage.getItem('books'))\n      : [];\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Save to localStorage\nexport const saveToLocalStorage = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('books', serializedState);\n  } catch (err) {\n    console.error(err);\n  }\n};\n","// Library related constants\nexport const LIBRARY_ADD_BOOK = 'LIBRARY_ADD_BOOK';\nexport const LIBRARY_REMOVE_BOOK = 'LIBRARY_REMOVE_BOOK';\nexport const LIBRARY_UPDATE_BOOK = 'LIBRARY_UPDATE_BOOK';\n\n// Filtered view related constants\nexport const VIEW_SELECT_ALL = 'VIEW_SELECT_ALL';\nexport const VIEW_SELECT_FAV = 'VIEW_SELECT_FAV';\nexport const VIEW_SELECT_READ = 'VIEW_SELECT_READ';\nexport const VIEW_SELECT_LOANED = 'VIEW_SELECT_LOANED';\nexport const VIEW_ADD_TO_CURRENT = 'VIEW_ADD_TO_CURRENT';\nexport const VIEW_REMOVE_FROM_CURRENT = 'VIEW_REMOVE_FROM_CURRENT';\nexport const VIEW_UPDATE_CURRENT = 'VIEW_UPDATE_CURRENT';\n","import { fromLocalStorage } from './helpers/localStorage';\nimport {\n  LIBRARY_ADD_BOOK,\n  LIBRARY_REMOVE_BOOK,\n  LIBRARY_UPDATE_BOOK,\n  VIEW_SELECT_ALL,\n  VIEW_SELECT_LOANED,\n  VIEW_SELECT_READ,\n  VIEW_SELECT_FAV,\n  VIEW_ADD_TO_CURRENT,\n  VIEW_REMOVE_FROM_CURRENT,\n  VIEW_UPDATE_CURRENT,\n} from './constants';\n\n// Define initial state\nconst initialState = {\n  library: fromLocalStorage(),\n  view: fromLocalStorage(),\n};\n\n// Reducer for library state changes\nexport const libraryReducer = (state = initialState.library, action) => {\n  switch (action.type) {\n    case LIBRARY_ADD_BOOK:\n      const book = action.payload;\n      return [...state, book];\n\n    case LIBRARY_REMOVE_BOOK:\n      const bookTitle = action.payload;\n      return [...state].filter((book) => {\n        return book.title !== bookTitle ? book : null;\n      });\n\n    case LIBRARY_UPDATE_BOOK:\n      const key = action.payload.key;\n      const { isFav, isLoaned, isReading } = action.payload.editItems;\n\n      return [...state].map((book) => {\n        if (book.title === key) {\n          return {\n            ...book,\n            isFav: isFav,\n            isLoaned: isLoaned,\n            isReading: isReading,\n          };\n        } else {\n          return book;\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\n// Reducer for search view state changes\nexport const viewReducer = (state = initialState.view, action) => {\n  // Make entire library available for filtering\n  const library = action.payload;\n\n  switch (action.type) {\n    case VIEW_SELECT_ALL:\n      return library;\n\n    case VIEW_SELECT_FAV:\n      return library.filter((book) => {\n        return book.isFav ? book : null;\n      });\n\n    case VIEW_SELECT_LOANED:\n      return library.filter((book) => {\n        return book.isLoaned ? book : null;\n      });\n\n    case VIEW_SELECT_READ:\n      return library.filter((book) => {\n        return book.isReading ? book : null;\n      });\n\n    case VIEW_ADD_TO_CURRENT:\n      const book = action.payload;\n      return [...state, book];\n\n    case VIEW_REMOVE_FROM_CURRENT:\n      const bookTitle = action.payload;\n      return [...state].filter((book) => {\n        return book.title !== bookTitle ? book : null;\n      });\n\n    // Update current view, needed to update view after edit (looking for a better way)\n    case VIEW_UPDATE_CURRENT:\n      const currentView = [...state];\n      // Compares arrays and returns new book if it exists in current view\n      const newValues = library.filter((bookNew) =>\n        currentView.some((bookOld) => bookNew.key === bookOld.key)\n      );\n      // Mapping through currentView and update each book with newValues\n      return [...state].map((book, index) => {\n        return newValues[index];\n      });\n\n    default:\n      return state;\n  }\n};\n","// Package imports\nimport { createStore, combineReducers } from 'redux';\n\n// File imports\nimport { libraryReducer, viewReducer } from './reducers';\nimport { saveToLocalStorage } from './helpers/localStorage';\n\n// Create reducer\nconst reducer = combineReducers({\n  library: libraryReducer,\n  view: viewReducer,\n});\n\n// Create store\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n// Handler for keeping localStorage in sync with library state\nstore.subscribe(() => {\n  saveToLocalStorage(store.getState().library);\n});\n\nexport default store;\n","// Holds the apps title bar.\n\nimport React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\n\n// Material-UI styling hook.\nconst useStyles = makeStyles(() => ({\n  titleBarStyle: {\n    backgroundColor: '#34315E',\n  },\n}));\n\n//Component\nconst TitleBar = () => {\n  const classes = useStyles();\n\n  //JSX\n  return (\n    <AppBar position=\"static\" className={classes.titleBarStyle}>\n      <Toolbar>\n        <Typography variant=\"h4\">Books</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TitleBar;\n","// Holds menu bar items.\n\n// Package imports\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AppBar, Toolbar, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\n\n// Component imports\nimport {\n  viewAllBooks,\n  viewFavBooks,\n  viewLoanedBooks,\n  viewReadBooks,\n} from '../../redux/actions';\n\n// Material-UI styling hook.\nconst useStyles = makeStyles(() => ({\n  menuBarStyle: {\n    backgroundColor: '#6159E5',\n  },\n  buttonTextStyle: {\n    color: 'white',\n  },\n}));\n\n// Component\nconst MenuBar = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  //JSX\n  return (\n    <AppBar position=\"static\" className={classes.menuBarStyle}>\n      <Toolbar>\n        <Button\n          className={classes.buttonTextStyle}\n          onClick={() => dispatch(viewAllBooks())}\n        >\n          All\n        </Button>\n        <Button\n          className={classes.buttonTextStyle}\n          onClick={() => dispatch(viewReadBooks())}\n        >\n          Reading\n        </Button>\n        <Button\n          className={classes.buttonTextStyle}\n          onClick={() => dispatch(viewFavBooks())}\n        >\n          Favourites\n        </Button>\n        <Button\n          className={classes.buttonTextStyle}\n          onClick={() => dispatch(viewLoanedBooks())}\n        >\n          Loaned Out\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default MenuBar;\n","import store from './store';\n\nimport {\n  LIBRARY_ADD_BOOK,\n  LIBRARY_REMOVE_BOOK,\n  LIBRARY_UPDATE_BOOK,\n  VIEW_SELECT_ALL,\n  VIEW_SELECT_LOANED,\n  VIEW_SELECT_READ,\n  VIEW_SELECT_FAV,\n  VIEW_ADD_TO_CURRENT,\n  VIEW_REMOVE_FROM_CURRENT,\n  VIEW_UPDATE_CURRENT,\n} from './constants';\n\nexport const addToLibrary = (book) => {\n  return {\n    type: LIBRARY_ADD_BOOK,\n    payload: book,\n  };\n};\n\nexport const removeFromLibrary = (bookTitle) => {\n  return {\n    type: LIBRARY_REMOVE_BOOK,\n    payload: bookTitle,\n  };\n};\n\nexport const viewAllBooks = () => {\n  return {\n    type: VIEW_SELECT_ALL,\n    payload: store.getState().library,\n  };\n};\n\nexport const viewLoanedBooks = () => {\n  return {\n    type: VIEW_SELECT_LOANED,\n    payload: store.getState().library,\n  };\n};\n\nexport const viewReadBooks = () => {\n  return {\n    type: VIEW_SELECT_READ,\n    payload: store.getState().library,\n  };\n};\n\nexport const viewFavBooks = () => {\n  return {\n    type: VIEW_SELECT_FAV,\n    payload: store.getState().library,\n  };\n};\n\nexport const addToView = (book) => {\n  return {\n    type: VIEW_ADD_TO_CURRENT,\n    payload: book,\n  };\n};\n\nexport const removeFromView = (bookTitle) => {\n  return {\n    type: VIEW_REMOVE_FROM_CURRENT,\n    payload: bookTitle,\n  };\n};\n\nexport const updateBook = (bookTitle, editItems) => {\n  return {\n    type: LIBRARY_UPDATE_BOOK,\n    payload: {\n      key: bookTitle,\n      editItems: editItems,\n    },\n  };\n};\n\nexport const updateView = () => {\n  return {\n    type: VIEW_UPDATE_CURRENT,\n    payload: store.getState().library,\n  };\n};\n","import React from 'react';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst CardEdit = ({ editItems, setEditItems }) => {\n  const handleSwitch = (e) => {\n    setEditItems({ ...editItems, [e.target.name]: e.target.checked });\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={editItems.isFav}\n            onChange={handleSwitch}\n            name=\"isFav\"\n            color=\"primary\"\n            size=\"small\"\n          />\n        }\n        label=\"Favourite:\"\n        labelPlacement=\"start\"\n      />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={editItems.isLoaned}\n            onChange={handleSwitch}\n            name=\"isLoaned\"\n            color=\"primary\"\n            size=\"small\"\n          />\n        }\n        label=\"Loaned Out:\"\n        labelPlacement=\"start\"\n      />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={editItems.isReading}\n            onChange={handleSwitch}\n            name=\"isReading\"\n            color=\"primary\"\n            size=\"small\"\n          />\n        }\n        label=\"Currently Reading:\"\n        labelPlacement=\"start\"\n      />\n    </FormGroup>\n  );\n};\n\nexport default CardEdit;\n","// Card component for each book card.\n\n// Component imports\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  removeFromLibrary,\n  removeFromView,\n  updateBook,\n  updateView,\n} from '../../redux/actions';\nimport CardEdit from './CardEdit';\n\n// Material UI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// Material-UI styling hook.\nconst useStyles = makeStyles({\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\n// Component\nfunction CardItem({\n  bookTitle,\n  bookAuthor,\n  bookPages,\n  isFav,\n  isLoaned,\n  isReading,\n}) {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const deleteHandler = (bookTitle) => {\n    dispatch(removeFromLibrary(bookTitle));\n    dispatch(removeFromView(bookTitle));\n  };\n\n  // useState for managing edit state.\n  const [isEditing, setIsEditing] = useState(false);\n\n  // useState for keeping track of edits\n  const [editItems, setEditItems] = useState({\n    isFav: isFav,\n    isLoaned: isLoaned,\n    isReading: isReading,\n  });\n\n  // Handler for edits.\n  const editHandler = () => {\n    setIsEditing(false);\n    dispatch(updateBook(bookTitle, editItems));\n    dispatch(updateView());\n  };\n\n  //JSX\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          {bookAuthor}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {bookTitle}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          Pages: {bookPages}\n        </Typography>\n        {isEditing ? (\n          <CardEdit editItems={editItems} setEditItems={setEditItems} />\n        ) : (\n          <Typography variant=\"body2\" component=\"p\">\n            Favourite: {isFav ? 'Yes' : 'No'}\n            <br />\n            Loaned Out: {isLoaned ? 'Yes' : 'No'}\n            <br />\n            Currently Reading: {isReading ? 'Yes' : 'No'}\n          </Typography>\n        )}\n      </CardContent>\n      <CardActions>\n        <Button\n          color=\"secondary\"\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={() => deleteHandler(bookTitle)}\n        >\n          Delete\n        </Button>\n        {isEditing ? (\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => editHandler()}\n          >\n            Save\n          </Button>\n        ) : (\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => setIsEditing(true)}\n          >\n            Edit\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default CardItem;\n","// Package imports\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n// Component imports\nimport { addToLibrary, addToView } from '../../redux/actions';\n\n// UI component imports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst AddBookModal = () => {\n  // Redux dispatch\n  const dispatch = useDispatch();\n\n  // Open/Close for dialog.\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // State hook that contains dialog input\n  const [book, setBook] = useState({\n    title: '',\n    author: '',\n    pages: '',\n    isFav: false,\n    isLoaned: false,\n    isReading: false,\n    key: Math.random(),\n  });\n\n  // Update state from text field inputs\n  const handleChange = (e) => {\n    setBook({ ...book, [e.target.id]: e.target.value });\n  };\n\n  const handleSwitch = (e) => {\n    setBook({ ...book, [e.target.name]: e.target.checked });\n  };\n\n  // Combine handleClose and handleInputDialog. Two actions needed for onClick.\n  const dialogHandler = () => {\n    if (book.title === '' || book.author === '' || book.pages === '') {\n      alert('Please fill out all fields in the form');\n    } else {\n      handleClose();\n      dispatch(addToLibrary(book));\n      dispatch(addToView(book));\n      setBook({\n        title: '',\n        author: '',\n        pages: '',\n        isFav: false,\n        isLoaned: false,\n        isReading: false,\n        key: Math.random(),\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Add Book\n        <LibraryAddIcon />\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Add Book</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Enter book details below:</DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"author\"\n            label=\"Book Author\"\n            type=\"text\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={handleChange}\n            value={book.author}\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Book Title\"\n            type=\"text\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={handleChange}\n            value={book.title}\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"pages\"\n            label=\"# Pages\"\n            type=\"number\"\n            inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\n            fullWidth\n            autoComplete=\"off\"\n            onChange={handleChange}\n            value={book.pages}\n          />\n          <FormGroup row>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={book.isFav}\n                  onChange={handleSwitch}\n                  name=\"isFav\"\n                  color=\"primary\"\n                  size=\"small\"\n                />\n              }\n              label=\"Favourite:\"\n              labelPlacement=\"start\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={book.isLoaned}\n                  onChange={handleSwitch}\n                  name=\"isLoaned\"\n                  color=\"primary\"\n                  size=\"small\"\n                />\n              }\n              label=\"Loaned Out:\"\n              labelPlacement=\"start\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={book.isReading}\n                  onChange={handleSwitch}\n                  name=\"isReading\"\n                  color=\"primary\"\n                  size=\"small\"\n                />\n              }\n              label=\"Currently Reading:\"\n              labelPlacement=\"start\"\n            />\n          </FormGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={dialogHandler} color=\"primary\">\n            Add Book\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AddBookModal;\n","export default __webpack_public_path__ + \"static/media/defaultBackground.00a687f3.svg\";","// Component that shows when no cards are loaded.\n\nimport React from 'react';\nimport defaultBackground from '../../assets/defaultBackground.svg';\nimport { Grid, Typography } from '@material-ui/core';\nimport styled from 'styled-components';\n\n// Styled components, scales background image on smaller screen.\nconst Image = styled.img`\n  height: 350px;\n  @media (max-width: 688px) {\n    height: 250px;\n  }\n`;\n\n// Component. TODO: find better way to center background image, instead of minHeight.\nconst EmptyDefault = () => {\n  // JSX\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      spacing={0}\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ minHeight: '70vh' }}\n    >\n      <Typography>Start to add books to your library.</Typography>\n      <Image src={defaultBackground} alt=\"Default background.\" />\n    </Grid>\n  );\n};\n\nexport default EmptyDefault;\n","// Maintains content views\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport CardItem from './CardItem';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport AddBookModal from './AddBookModal';\nimport EmptyDefault from './EmptyDefault';\n\n// Material-UI styling hook.\nconst useStyles = makeStyles({\n  topMargin: {\n    marginTop: 12,\n  },\n  buttonText: {\n    color: '#6159E5',\n  },\n});\n\n//Component\nconst ContentHolder = () => {\n  // Material UI styles\n  const classes = useStyles();\n\n  // Load books from redux store\n  const bookView = useSelector((state) => state.view);\n\n  // Display all books from view state.\n  const renderBooks = bookView.map((book) => (\n    <Grid item xs={12} sm={6} md={4} key={book.key}>\n      <CardItem\n        bookTitle={book.title}\n        bookAuthor={book.author}\n        bookPages={book.pages}\n        isFav={book.isFav}\n        isLoaned={book.isLoaned}\n        isReading={book.isReading}\n      />\n    </Grid>\n  ));\n\n  // Display default screen when no books in library.\n  const noBooks = () => {\n    return bookView.length === 0 ? <EmptyDefault /> : null;\n  };\n\n  //JSX\n  return (\n    <Grid container spacing={2} className={classes.topMargin}>\n      <Grid container justify=\"center\">\n        <AddBookModal />\n      </Grid>\n      {noBooks()}\n      {renderBooks}\n    </Grid>\n  );\n};\n\nexport default ContentHolder;\n","// App component. All data currently static\n\nimport React from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nimport TitleBar from './components/app-bars/TitleBar';\nimport MenuBar from './components/app-bars/MenuBar';\nimport ContentHolder from './components/content/ContentHolder';\n\nfunction App() {\n  // JSX\n  return (\n    <Grid container direction=\"column\">\n      <Grid item>\n        <TitleBar />\n      </Grid>\n      <Grid item container>\n        <MenuBar />\n      </Grid>\n      <Grid item container>\n        <Grid item xs={false} sm={2} />\n        <Grid item xs={12} sm={8}>\n          <ContentHolder />\n        </Grid>\n        <Grid item xs={false} sm={2} />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}