{"version":3,"sources":["assets/defaultBackground.svg","components/app-bars/TitleBar.jsx","components/app-bars/MenuBar.jsx","components/content/CardItem.jsx","components/content/AddBookModal.jsx","components/content/EmptyDefault.jsx","App.js","components/content/ContentHolder.jsx","index.js"],"names":["module","exports","useStyles","makeStyles","titleBarStyle","backgroundColor","TitleBar","classes","AppBar","position","className","Toolbar","Typography","variant","menuBarStyle","buttonTextStyle","color","MenuBar","displayIsFav","displayIsReading","displayIsLoaned","displayAllBooks","Button","onClick","title","fontSize","pos","marginBottom","CardItem","bookTitle","bookAuthor","bookPages","isFav","isLoaned","isReading","Card","CardContent","gutterBottom","component","CardActions","disabled","size","AddBookModal","handleInputDialog","useState","open","setOpen","handleClose","author","pages","key","Math","random","book","setBook","handleChange","e","target","id","value","handleSwitch","name","checked","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","autoComplete","onChange","inputProps","inputmode","pattern","FormGroup","row","FormControlLabel","control","Switch","labelPlacement","DialogActions","alert","bookStorage","Image","styled","img","EmptyDefault","Grid","container","direction","spacing","alignItems","justify","style","minHeight","src","defaultBackground","alt","topMargin","marginTop","buttonText","ContentHolder","books","setBooks","renderBooks","map","item","xs","sm","md","input","push","localStorage","setItem","JSON","stringify","length","getItem","parse","App","filteredBooks","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b189ab2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultBackground.8ac9c079.svg\";","// Holds the apps title bar.\n\nimport React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\n\n// Material-UI styling hook.\nconst useStyles = makeStyles(() => ({\n  titleBarStyle: {\n    backgroundColor: '#34315E',\n  },\n}));\n\n//Component\nconst TitleBar = () => {\n  const classes = useStyles();\n\n  //JSX\n  return (\n    <AppBar position=\"static\" className={classes.titleBarStyle}>\n      <Toolbar>\n        <Typography variant=\"h4\">Books</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TitleBar;\n","// Holds menu bar items.\n\nimport React from 'react';\nimport { AppBar, Toolbar, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\n\n// Material-UI styling hook.\nconst useStyles = makeStyles(() => ({\n  menuBarStyle: {\n    backgroundColor: '#6159E5',\n  },\n  buttonTextStyle: {\n    color: 'white',\n  },\n}));\n\n// Component\nconst MenuBar = ({\n  displayIsFav,\n  displayIsReading,\n  displayIsLoaned,\n  displayAllBooks,\n}) => {\n  const classes = useStyles();\n\n  //JSX\n  return (\n    <AppBar position=\"static\" className={classes.menuBarStyle}>\n      <Toolbar>\n        <Button className={classes.buttonTextStyle} onClick={displayAllBooks}>\n          All\n        </Button>\n        <Button className={classes.buttonTextStyle} onClick={displayIsReading}>\n          Reading\n        </Button>\n        <Button className={classes.buttonTextStyle} onClick={displayIsFav}>\n          Favourites\n        </Button>\n        <Button className={classes.buttonTextStyle} onClick={displayIsLoaned}>\n          Loaned Out\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default MenuBar;\n","// Card component for each book card.\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// Material-UI styling hook.\nconst useStyles = makeStyles({\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\n// Component\nfunction CardItem({\n  bookTitle,\n  bookAuthor,\n  bookPages,\n  isFav,\n  isLoaned,\n  isReading,\n}) {\n  const classes = useStyles();\n\n  //JSX\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          {bookAuthor}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {bookTitle}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          Pages: {bookPages}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Favourite: {isFav ? 'Yes' : 'No'}\n          <br />\n          Loaned Out: {isLoaned ? 'Yes' : 'No'}\n          <br />\n          Currently Reading: {isReading ? 'Yes' : 'No'}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button disabled size=\"small\">\n          Delete\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default CardItem;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst AddBookModal = ({ handleInputDialog }) => {\n  // Open/Close for dialog.\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // State hook that contains dialog input\n  const [book, setBook] = useState({\n    title: '',\n    author: '',\n    pages: '',\n    isFav: false,\n    isLoaned: false,\n    isReading: false,\n    key: Math.random(),\n  });\n\n  // Update state from text field inputs\n  const handleChange = (e) => {\n    setBook({ ...book, [e.target.id]: e.target.value });\n  };\n\n  const handleSwitch = (e) => {\n    setBook({ ...book, [e.target.name]: e.target.checked });\n  };\n\n  // Combine handleClose and handleInputDialog. Two actions needed for onClick.\n  const dialogHandler = () => {\n    if (book.title === '' || book.author === '' || book.pages === '') {\n      alert('Please fill out all fields in the form');\n    } else {\n      handleClose();\n      handleInputDialog(book);\n      setBook({\n        title: '',\n        author: '',\n        pages: '',\n        isFav: false,\n        isLoaned: false,\n        isReading: false,\n        key: Math.random(),\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Add Book\n        <LibraryAddIcon />\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Add Book</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Enter book details below:</DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"author\"\n            label=\"Book Author\"\n            type=\"text\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={handleChange}\n            value={book.author}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Book Title\"\n            type=\"text\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={handleChange}\n            value={book.title}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"pages\"\n            label=\"# Pages\"\n            type=\"number\"\n            inputProps={{ inputmode: 'numeric', pattern: '[0-9]*' }}\n            fullWidth\n            autoComplete=\"off\"\n            onChange={handleChange}\n            value={book.pages}\n          />\n          <FormGroup row>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={book.isFav}\n                  onChange={handleSwitch}\n                  name=\"isFav\"\n                  color=\"primary\"\n                  size=\"small\"\n                />\n              }\n              label=\"Favourite:\"\n              labelPlacement=\"start\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={book.isLoaned}\n                  onChange={handleSwitch}\n                  name=\"isLoaned\"\n                  color=\"primary\"\n                  size=\"small\"\n                />\n              }\n              label=\"Loaned Out:\"\n              labelPlacement=\"start\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={book.isReading}\n                  onChange={handleSwitch}\n                  name=\"isReading\"\n                  color=\"primary\"\n                  size=\"small\"\n                />\n              }\n              label=\"Currently Reading:\"\n              labelPlacement=\"start\"\n            />\n          </FormGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={dialogHandler} color=\"primary\">\n            Add Book\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AddBookModal;\n","// Component that shows when no cards are loaded.\n\nimport React from 'react';\nimport defaultBackground from '../../assets/defaultBackground.svg';\nimport { Grid, Typography } from '@material-ui/core';\nimport styled from 'styled-components';\n\n// Styled components, scales background image on smaller screen.\nconst Image = styled.img`\n  height: 350px;\n  @media (max-width: 688px) {\n    height: 250px;\n  }\n`;\n\n// Component. TODO: find better way to center background image, instead of minHeight.\nconst EmptyDefault = () => {\n  // JSX\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      spacing={0}\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ minHeight: '70vh' }}\n    >\n      <Typography>Start to add books to your library.</Typography>\n      <Image src={defaultBackground} alt=\"Default background.\" />\n    </Grid>\n  );\n};\n\nexport default EmptyDefault;\n","// App component. All data currently static\n\nimport React, { useState } from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nimport TitleBar from './components/app-bars/TitleBar';\nimport MenuBar from './components/app-bars/MenuBar';\nimport ContentHolder from './components/content/ContentHolder';\n\n// Local storage\nexport let bookStorage;\nif (localStorage.getItem('books') === null) {\n  bookStorage = [];\n} else {\n  bookStorage = JSON.parse(localStorage.getItem('books'));\n}\n// export let bookStorage = [];\n\n// Component\nfunction App() {\n  // React useState hook.\n  const [books, setBooks] = useState(bookStorage);\n\n  // Display filtered books: isFav\n  const displayIsFav = () => {\n    let filteredBooks = [...bookStorage].filter((book) => {\n      return book.isFav ? book : null;\n    });\n    setBooks(filteredBooks);\n  };\n\n  // Display filtered books: isLoaned\n  const displayIsLoaned = () => {\n    let filteredBooks = [...bookStorage].filter((book) => {\n      return book.isLoaned ? book : null;\n    });\n    setBooks(filteredBooks);\n  };\n\n  // Display filtered books: isReading\n  const displayIsReading = () => {\n    let filteredBooks = [...bookStorage].filter((book) => {\n      return book.isReading ? book : null;\n    });\n    setBooks(filteredBooks);\n  };\n\n  // Display all books.\n  const displayAllBooks = () => {\n    setBooks(bookStorage);\n  };\n\n  // JSX\n  return (\n    <Grid container direction=\"column\">\n      <Grid item>\n        <TitleBar />\n      </Grid>\n      <Grid item container>\n        <MenuBar\n          displayIsFav={displayIsFav}\n          displayIsLoaned={displayIsLoaned}\n          displayIsReading={displayIsReading}\n          displayAllBooks={displayAllBooks}\n        />\n      </Grid>\n      <Grid item container>\n        <Grid item xs={false} sm={2} />\n        <Grid item xs={12} sm={8}>\n          <ContentHolder books={books} setBooks={setBooks} />\n        </Grid>\n        <Grid item xs={false} sm={2} />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","// Maintains content views\nimport React from 'react';\nimport { bookStorage } from '../../App';\n\nimport CardItem from './CardItem';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport AddBookModal from './AddBookModal';\nimport EmptyDefault from './EmptyDefault';\n\n// Material-UI styling hook.\nconst useStyles = makeStyles({\n  topMargin: {\n    marginTop: 12,\n  },\n  buttonText: {\n    color: '#6159E5',\n  },\n});\n\n//Component\nconst ContentHolder = ({ books, setBooks }) => {\n  // Material UI styles\n  const classes = useStyles();\n\n  // Display all books from state.\n  const renderBooks = books.map((book) => (\n    <Grid item xs={12} sm={6} md={4} key={book.key}>\n      <CardItem\n        bookTitle={book.title}\n        bookAuthor={book.author}\n        bookPages={book.pages}\n        isFav={book.isFav}\n        isLoaned={book.isLoaned}\n        isReading={book.isReading}\n      />\n    </Grid>\n  ));\n\n  // Display default screen when no books in library.\n  const noBooks = () => {\n    return books.length === 0 ? <EmptyDefault /> : null;\n  };\n\n  // Handle input from dialog\n  const handleInputDialog = (input) => {\n    setBooks([...books, input]);\n    bookStorage.push(input);\n    localStorage.setItem('books', JSON.stringify(bookStorage));\n  };\n\n  //JSX\n  return (\n    <Grid container spacing={2} className={classes.topMargin}>\n      <Grid container justify=\"center\">\n        <AddBookModal handleInputDialog={handleInputDialog} />\n      </Grid>\n      {noBooks()}\n      {renderBooks}\n    </Grid>\n  );\n};\n\nexport default ContentHolder;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}